# platform aligned with post_install
platform :ios, '17.0'

ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

use_frameworks!

target 'Runner' do
  pod 'Punycode', :podspec => '../../ios/Podspecs'
  pod 'FilterEngine', :podspec => '../../ios/Podspecs'
  pod 'PublicSuffixList', :podspec => '../../ios/Podspecs'
  pod 'ContentBlockerConverter', :podspec => '../../ios/Podspecs'
  pod 'ZIPFoundation', :podspec => '../../ios/Podspecs/ZipFoundation.podspec'
  pod 'wBlockCoreService', :podspec => '../../ios/Podspecs'
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# All extension targets that need wBlockCoreService
['wBlock Ads',
 'wBlock Scripts',
 'wBlock Privacy',
 'wBlock Security',
 'wBlock Annoyances',
 'wBlock Multipurpose',
 'wBlock Experimental',
 'wBlock Foreign',
 'wBlock Custom'
].each do |extension_name|
  target extension_name do
    use_frameworks!
    pod 'wBlockCoreService', :podspec => '../../ios/Podspecs'
    
    # Also add dependencies that wBlockCoreService needs
    pod 'ContentBlockerConverter', :podspec => '../../ios/Podspecs'
    pod 'ZIPFoundation', :podspec => '../../ios/Podspecs/ZipFoundation.podspec'
    pod 'FilterEngine', :podspec => '../../ios/Podspecs'
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    target.build_configurations.each do |config|
      # Ensure consistent iOS deployment target
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '17.0'
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Prevent framework embedding conflicts
      if target.name.include?('ContentBlockerConverter')
        config.build_settings['SKIP_INSTALL'] = 'YES'
      end
    end
  end
  
  # Additional fix for generated project targets
  installer.generated_projects.each do |project|
    project.targets.each do |target|
      target.build_configurations.each do |config|
        # Ensure all targets use inherited values to prevent conflicts
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '17.0'
        
        # Force inheritance of CocoaPods settings to prevent override warnings
        if config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER']
          config.build_settings['CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER'] = '$(inherited)'
        end
      end
    end
  end
end
